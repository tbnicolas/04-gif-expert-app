{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","console","log","dataImage","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAU,OAAGP,GAAH,mBAAiBO,OACzCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAhBc,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,YCNjBG,EAAc,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAC/B,OACI,yBAAKC,UAAU,8CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,+BAAKA,EAAL,O,uBCHCK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,6BAHR,oCAGQ,SAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAACC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPhB,MAAOe,EAAIf,MACXC,IAAG,UAACc,EAAIE,cAAL,aAAC,EAAYC,iBAAiBjB,QARtB,kBAWZY,GAXY,4CAAH,sDCCPM,EAAW,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECAZ,SAACA,GAAY,IAAD,EAEVpB,mBAAS,CAC/B0B,KAAK,GACLQ,SAAQ,IAJwB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAqBpC,OAdAC,qBAAU,WACNlB,EAAQC,GACJkB,MAAK,SAAAT,GACFU,YAAW,WACVH,EAAS,CACLV,KAAKG,EACLK,SAAQ,MAEV,UAGZ,IAGKC,EDlBwBK,CAAapB,GAAhCW,EAHwB,EAG7BL,KAAaQ,EAHgB,EAGhBA,QAIpB,OAFAO,QAAQC,IAAIR,GAGR,oCACA,wBAAIlB,UAAU,4CAAd,IAA2DI,GAC1Dc,GAAW,aACX,yBAAKlB,UAAU,aACPe,EAAOH,KAAI,SAACe,GACT,OAAO,kBAAC,EAAD,eACPC,IAAKD,EAAUb,IACXa,UEfXE,EAAe,WAAM,MAGI7C,mBAAS,CAAC,cAHd,mBAGzBQ,EAHyB,KAGbT,EAHa,KAehC,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BACGS,EAAWoB,KAAI,SAACR,EAAUU,GAAX,OACb,kBAAC,EAAD,CACCc,IAAKxB,EACLA,SAAUA,UCzBtB0B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.75b72eee.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n       setInputValue(e.target.value); \r\n    };\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(categories=>[inputValue,...categories]);\r\n            setInputValue('');\r\n        }\r\n\r\n    };\r\n    return (\r\n        <form onSubmit ={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft\">\r\n            <img src={url} alt={title}/>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","const apiKey = 'KbzG6hIbDArfICwIlb9bMOsqxE6JySIN';\r\n\r\n\r\nexport const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map((img)=>{\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url:img.images?.downsized_medium.url\r\n        };\r\n    });\r\n    return gifs;\r\n};","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GiftGrid = ({category}) => {\r\n\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    //console.log(data);\r\n    console.log(loading);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeInLeftBig\"> {category}</h3>\r\n        {loading && 'cargando..'}\r\n         <div className=\"card-grid\">\r\n                {images.map((dataImage)=>{\r\n                    return <GifGridItem \r\n                    key={dataImage.id} \r\n                    {...dataImage}\r\n                    />\r\n                })}\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n    ","\r\nimport {useState,useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category)=>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    //De estÃ¡ manera se ejecuta el componente la primera vez que se renderiza el componente\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n           .then(img=>{\r\n               setTimeout(() => {\r\n                setState({\r\n                    data:img,\r\n                    loading:false\r\n                });       \r\n               }, 3000);\r\n            \r\n           });\r\n    },[]);\r\n\r\n    \r\n    return state;\r\n};","import React,{useState} from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GiftGrid } from \"./components/GiftGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  //const categories = [\"One Punch\", \"Samurai X\", \"Dragon Ball\"];\r\n\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n  \r\n /*  const handleAdd =()=>{\r\n      //categories.push('IronMan');\r\n      //setCategories([...categories,'HunterXHunter']);\r\n\r\n      // El setLoqueSea regresa un Callback con el estado anterior\r\n      //En este caso el estado categories tiene [\"One Punch\", \"Samurai X\", \"Dragon Ball\"]\r\n      //Ya que eso fue lo que se definio (Caso para la primera vez que se ejecute)\r\n      setCategories(categories=>[...categories,'IronMan']);\r\n\r\n  }; */\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr/>\r\n\r\n\r\n      <ol>\r\n        {categories.map((category, id) =>\r\n           <GiftGrid \r\n            key={category}\r\n            category={category}\r\n           />\r\n        )}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n \n    <GifExpertApp/>,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}